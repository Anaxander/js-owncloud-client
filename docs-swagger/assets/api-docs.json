{
 "swagger": "2.0",
 "info": {
  "version": "10.0.0",
  "title": "ownCloud documentation"
 },
 "tags": [
  {
   "name": "General",
   "description": "Methods like initLibrary, login etc."
  },
  {
   "name": "Sharing",
   "description": "File/Folder sharing methods"
  },
  {
   "name": "Apps Management",
   "description": "Methods for Enabling/Disabling/Retrieving apps"
  },
  {
   "name": "User Management",
   "description": "User Creation/Deletion/Updation methods"
  },
  {
   "name": "Group Management",
   "description": "Group Creation/Deletion/Updation methods"
  }
 ],
 "host": "localhost:8080",
 "basePath": "/",
 "schemes": [
  "http"
 ],
 "consumes": [
  "application/json"
 ],
 "produces": [
  "application/json"
 ],
 "paths": {
  "/initLibrary": {
   "get": {
    "tags": [
     "General"
    ],
    "description": "Initialize the owncloud session by specifying an owncloud instance URL.",
    "summary": "Initialize owncloud session",
    "operationId": "initLibrary",
    "parameters": [
     {
      "name": "url",
      "in": "query",
      "description": "server URL",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/login": {
   "get": {
    "tags": [
     "General"
    ],
    "description": "Login into the URL specified in the \"/initLibrary\" API",
    "operationId": "login",
    "summary": "Logs you in to your specified ownCloud instance",
    "parameters": [
     {
      "name": "user",
      "description": "username",
      "in": "query",
      "type": "string"
     },
     {
      "name": "pass",
      "description": "password",
      "in": "query",
      "type": "string",
      "format": "password"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getApps": {
   "get": {
    "tags": [
     "Apps Management"
    ],
    "description": "Get all the enabled and disbaled apps via the Provisioning API",
    "summary": "Get all the enabled and disbaled apps via the Provisioning API",
    "operationId": "getApps",
    "produces": [
     "application/json"
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/shareFileWithLink": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "Shares a remote file with link",
    "summary": "Shares a remote file with link",
    "operationId": "shareFileWithLink",
    "parameters": [
     {
      "name": "path",
      "in": "query",
      "description": "path of the file to be shared",
      "type": "string"
     },
     {
      "name": "perms",
      "in": "query",
      "required": false,
      "description": "permission of the shared object defaults to read only (OPTIONAL)",
      "type": "integer"
     },
     {
      "name": "publicUpload",
      "in": "query",
      "required": false,
      "description": "allows users to upload files or folders (OPTIONAL)",
      "type": "boolean"
     },
     {
      "name": "password",
      "in": "query",
      "required": false,
      "description": "sets a password (OPTIONAL)",
      "type": "string",
      "format": "password"
     }
    ],
    "produces": [
     "application/json"
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/updateShare": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "Updates a given share",
    "summary": "Updates a given share",
    "operationId": "updateShare",
    "parameters": [
     {
      "name": "shareId",
      "in": "query",
      "description": "ID of share to update",
      "type": "integer"
     },
     {
      "name": "perms",
      "in": "query",
      "required": false,
      "description": "permission of the shared object defaults to read only (OPTIONAL)",
      "type": "integer"
     },
     {
      "name": "publicUpload",
      "in": "query",
      "required": false,
      "description": "allows users to upload files or folders (OPTIONAL)",
      "type": "boolean"
     },
     {
      "name": "password",
      "in": "query",
      "required": false,
      "description": "sets a password (OPTIONAL)",
      "type": "string",
      "format": "password"
     }
    ],
    "produces": [
     "application/json"
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/shareFileWithUser": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "Shares a remote file with User",
    "summary": "Shares a remote file with User",
    "operationId": "shareFileWithUser",
    "parameters": [
     {
      "name": "path",
      "in": "query",
      "description": "path of the file to be shared",
      "type": "string"
     },
     {
      "name": "username",
      "in": "query",
      "description": "name of user to be shared with",
      "type": "string"
     },
     {
      "name": "perms",
      "in": "query",
      "required": false,
      "description": "permission of the shared object defaults to read only (OPTIONAL)",
      "type": "integer"
     },
     {
      "name": "remoteUser",
      "in": "query",
      "required": false,
      "description": "allows users to upload files or folders (OPTIONAL)",
      "type": "boolean"
     }
    ],
    "produces": [
     "application/json"
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/shareFileWithGroup": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "Shares a remote file with Group",
    "summary": "Shares a remote file with Group",
    "operationId": "shareFileWithGroup",
    "parameters": [
     {
      "name": "path",
      "in": "query",
      "description": "path of the file to be shared",
      "type": "string"
     },
     {
      "name": "groupName",
      "in": "query",
      "description": "name of group to be shared with",
      "type": "string"
     },
     {
      "name": "perms",
      "in": "query",
      "required": false,
      "description": "permission of the shared object defaults to read only (OPTIONAL)",
      "type": "integer"
     }
    ],
    "produces": [
     "application/json"
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getShares": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "Returns array of shares",
    "summary": "Returns array of shares",
    "operationId": "getShares",
    "parameters": [
     {
      "name": "path",
      "in": "query",
      "description": "path to the share to be checked",
      "type": "string"
     },
     {
      "name": "reshares",
      "in": "query",
      "required": false,
      "description": "resharing allowed or not",
      "type": "boolean"
     },
     {
      "name": "subfiles",
      "in": "query",
      "required": false,
      "description": "returns not only the shares from the current user but all shares from the given file",
      "type": "boolean"
     },
     {
      "name": "shared_with_me",
      "in": "query",
      "required": false,
      "description": "returns all shares which are shared with me",
      "type": "boolean"
     }
    ],
    "produces": [
     "application/json"
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/isShared": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "Checks wether a path is already shared",
    "summary": "Checks wether a path is already shared",
    "operationId": "isShared",
    "parameters": [
     {
      "name": "path",
      "description": "path to the share to be checked",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getShare": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "Gets share information about known share",
    "summary": "Gets share information about known share",
    "operationId": "getShare",
    "parameters": [
     {
      "name": "shareId",
      "description": "ID of the share to be checked",
      "in": "query",
      "type": "number"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/createUser": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Creates user via the provisioning API",
    "summary": "Creates user via the provisioning API",
    "operationId": "createUser",
    "parameters": [
     {
      "name": "username",
      "description": "username of the new user to be created",
      "in": "query",
      "type": "string"
     },
     {
      "name": "password",
      "description": "password of the new user to be created",
      "in": "query",
      "type": "string",
      "format": "password"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/deleteUser": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Deletes user via the provisioning API",
    "summary": "Deletes user via the provisioning API",
    "operationId": "deleteUser",
    "parameters": [
     {
      "name": "username",
      "description": "username of the user to be deleted",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/searchUsers": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Searches for users via the provisioning API",
    "summary": "Searches for users via the provisioning API",
    "operationId": "searchUsers",
    "parameters": [
     {
      "name": "username",
      "description": "username of the user to be searched",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/userExists": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Checks a user via the provisioning API",
    "summary": "Checks a user via the provisioning API",
    "operationId": "userExists",
    "parameters": [
     {
      "name": "username",
      "description": "name of user to be checked",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getUsers": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Get all users via the Provisioning API",
    "summary": "Get all users via the Provisioning API",
    "operationId": "getUsers",
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/setUserAttribute": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Sets a user attribute via the Provisioning API",
    "summary": "Sets a user attribute via the Provisioning API",
    "operationId": "setUserAttribute",
    "parameters": [
     {
      "name": "username",
      "description": "name of user to modify",
      "in": "query",
      "type": "string"
     },
     {
      "name": "key",
      "description": "key of the attribute to be set (email, quota, display, password)",
      "in": "query",
      "type": "string"
     },
     {
      "name": "value",
      "description": "value to be set",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/addUserToGroup": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Adds user to group via the Provisioning API",
    "summary": "Adds user to group via the Provisioning API",
    "operationId": "addUserToGroup",
    "parameters": [
     {
      "name": "username",
      "description": "name of user to modify",
      "in": "query",
      "type": "string"
     },
     {
      "name": "groupName",
      "description": "name of group to add to",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getUserGroups": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Get a list of groups associated to a user via the Provisioning API",
    "summary": "Get a list of groups associated to a user via the Provisioning API",
    "operationId": "getUserGroups",
    "parameters": [
     {
      "name": "username",
      "description": "name of user to list groups",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/userIsInGroup": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Checks if a user is in a group via the Provisioning API",
    "summary": "Checks if a user is in a group via the Provisioning API",
    "operationId": "userIsInGroup",
    "parameters": [
     {
      "name": "username",
      "description": "name of user",
      "in": "query",
      "type": "string"
     },
     {
      "name": "groupName",
      "description": "name of group",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getUser": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Retrieves information about a user via the Provisioning API",
    "summary": "Retrieves information about a user via the Provisioning API",
    "operationId": "getUser",
    "parameters": [
     {
      "name": "username",
      "description": "name of user to list groups",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/removeUserFromGroup": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Removes user from a group via the Provisioning API",
    "summary": "Removes user from a group via the Provisioning API",
    "operationId": "removeUserFromGroup",
    "parameters": [
     {
      "name": "username",
      "description": "name of user",
      "in": "query",
      "type": "string"
     },
     {
      "name": "groupName",
      "description": "name of group",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/addUserToSubadminGroup": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Adds user to a subadmin group via the Provisioning API",
    "summary": "Adds user to a subadmin group via the Provisioning API",
    "operationId": "addUserToSubadminGroup",
    "parameters": [
     {
      "name": "username",
      "description": "name of user to modify",
      "in": "query",
      "type": "string"
     },
     {
      "name": "groupName",
      "description": "name of group to add to",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getUserSubadminGroups": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Get a list of subadmin groups associated to a user via the Provisioning API",
    "summary": "Get a list of subadmin groups associated to a user via the Provisioning API",
    "operationId": "getUserSubadminGroups",
    "parameters": [
     {
      "name": "username",
      "description": "name of user to list groups",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/userIsInSubadminGroup": {
   "get": {
    "tags": [
     "User Management"
    ],
    "description": "Checks if a user is in a subadmin group via the Provisioning API",
    "summary": "Checks if a user is in a subadmin group via the Provisioning API",
    "operationId": "userIsInSubadminGroup",
    "parameters": [
     {
      "name": "username",
      "description": "name of user",
      "in": "query",
      "type": "string"
     },
     {
      "name": "groupName",
      "description": "name of group",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/createGroup": {
   "get": {
    "tags": [
     "Group Management"
    ],
    "description": "Creates a group via the provisioning API",
    "summary": "Creates a group via the provisioning API",
    "operationId": "createGroup",
    "parameters": [
     {
      "name": "groupName",
      "description": "groupName of the new user to be created",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/deleteGroup": {
   "get": {
    "tags": [
     "Group Management"
    ],
    "description": "Deletes a group via the provisioning API",
    "summary": "Deletes a group via the provisioning API",
    "operationId": "deleteGroup",
    "parameters": [
     {
      "name": "groupName",
      "description": "Name of the new group to be created",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getGroups": {
   "get": {
    "tags": [
     "Group Management"
    ],
    "description": "Gets all groups via the Provisioning API",
    "summary": "Gets all groups via the provisioning API",
    "operationId": "getGroups",
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getGroupMembers": {
   "get": {
    "tags": [
     "Group Management"
    ],
    "description": "Gets all members of a group via the Provisioning API",
    "summary": "Gets all members of a group via the provisioning API",
    "operationId": "getGroupMembers",
    "parameters": [
     {
      "name": "groupName",
      "description": "Name of the group to list members",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/groupExists": {
   "get": {
    "tags": [
     "Group Management"
    ],
    "description": "Checks a group via the provisioning API",
    "summary": "Checks a group via provisioning API",
    "operationId": "groupExists",
    "parameters": [
     {
      "name": "groupName",
      "description": "Name of the group to be checked",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getConfig": {
   "get": {
    "tags": [
     "General"
    ],
    "description": "Returns ownCloud config information",
    "summary": "Returns ownCloud config information",
    "operationId": "getConfig",
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getAttribute": {
   "get": {
    "tags": [
     "Apps Management"
    ],
    "description": "Returns an application attribute",
    "summary": "Returns an application attribute",
    "operationId": "getAttribute",
    "parameters": [
     {
      "name": "app",
      "description": "application ID",
      "in": "query",
      "type": "string"
     },
     {
      "name": "key",
      "description": "attribute key or None to retrieve all values for the given application",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/setAttribute": {
   "get": {
    "tags": [
     "Apps Management"
    ],
    "description": "Sets an application attribute",
    "summary": "Sets an application attribute",
    "operationId": "setAttribute",
    "parameters": [
     {
      "name": "app",
      "description": "application ID",
      "in": "query",
      "type": "string"
     },
     {
      "name": "key",
      "description": "attribute key or None to set for the given application",
      "in": "query",
      "type": "string"
     },
     {
      "name": "value",
      "description": "attribute value to set for the given key",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/deleteAttribute": {
   "get": {
    "tags": [
     "Apps Management"
    ],
    "description": "Deletes an application attribute",
    "summary": "Deletes an application attribute",
    "operationId": "deleteAttribute",
    "parameters": [
     {
      "name": "app",
      "description": "application ID",
      "in": "query",
      "type": "string"
     },
     {
      "name": "key",
      "description": "attribute key or None to set for the given application",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getVersion": {
   "get": {
    "tags": [
     "General"
    ],
    "description": "Gets the ownCloud version of the connected server",
    "summary": "Gets the ownCloud version of the connected server",
    "operationId": "getVersion",
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/getCapabilities": {
   "get": {
    "tags": [
     "General"
    ],
    "description": "Gets the ownCloud app capabilities",
    "summary": "Gets the ownCloud app capabilities",
    "operationId": "getCapabilities",
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/enableApp": {
   "get": {
    "tags": [
     "Apps Management"
    ],
    "description": "enables an app via the Provisioning API",
    "summary": "enables an app via the Provisioning API",
    "operationId": "enableApp",
    "parameters": [
     {
      "name": "appname",
      "description": "name of application to be enabled",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/disableApp": {
   "get": {
    "tags": [
     "Apps Management"
    ],
    "description": "disables an app via the Provisioning API",
    "summary": "disables an app via the Provisioning API",
    "operationId": "disableApp",
    "parameters": [
     {
      "name": "appname",
      "description": "name of application to be disabled",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/listOpenRemoteShare": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "List all pending remote share",
    "summary": "List all pending remote share",
    "operationId": "listOpenRemoteShare",
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  },
  "/acceptRemoteShare": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "Accepts a remote share",
    "summary": "Accepts a remote share",
    "operationId": "acceptRemoteShare",
    "parameters": [
     {
      "name": "shareId",
      "description": "ID of share to accept",
      "in": "query",
      "type": "integer"
     }
    ],
    "responses": {
     "200": {
      "description": "success"
     }
    }
   }
  },
  "/declineRemoteShare": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "Declines a remote share",
    "summary": "Declines a remote share",
    "operationId": "declineRemoteShare",
    "parameters": [
     {
      "name": "shareId",
      "description": "ID of share to decline",
      "in": "query",
      "type": "integer"
     }
    ],
    "responses": {
     "200": {
      "description": "success"
     }
    }
   }
  },
  "/deleteShare": {
   "get": {
    "tags": [
     "Sharing"
    ],
    "description": "Unshares a file or directory",
    "summary": "Unshares a file or directory",
    "operationId": "deleteShare",
    "parameters": [
     {
      "name": "shareId",
      "description": "ID of share to delete",
      "in": "query",
      "type": "integer"
     }
    ],
    "responses": {
     "200": {
      "description": "success",
      "schema": {
       "type": "object",
       "properties": {
        "status": {
         "type": "string"
        }
       }
      }
     }
    }
   }
  }
 }
}